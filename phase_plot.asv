function phase_plot(stimulus, response, raster, OFF_dur, ON_dur, fs, period)

stimulus = stimulus(:,OFF_dur*fs:(OFF_dur+ON_dur)*fs);
resp = response(:,OFF_dur*fs:(OFF_dur+ON_dur)*fs);
raster = raster(:,OFF_dur*fs:(OFF_dur+ON_dur)*fs);

stimulus_filt = sgolayfilt(stimulus, 1, 5);
stim = stimulus_filt - mean(stimulus_filt,2);
[m,n] = size(stim);
mean_positions = mean(stim, 2);
resp = resp - mean(resp,2);
% plot(stim(1,:));
% plot(resp(1,:));
phase = [];
gain = [];

count = 1;
for i =1:m
    
    mean_pos  =mean_positions(i);
    
    zc = [];
    for j = 2:n
        if (stim(i,j-1)<=mean_pos && stim(i,j)>=mean_pos && stim(i,j+1)>mean_pos)
            zc(j) = 1;
        end
    end
    [~,locs ]= find(zc==1);
    
    %     figure; plot(stim(i,:));hold on; plot(locs, stim(i,locs), 'rx'); yline(mean_pos); hold off;

    for k= 2:length(locs)
        
        
        stim_clips = stim(i, locs(k-1):locs(k));% figure(); subplot(2,1,1); plot(stim_clips) ;
        resp_clips = resp(i, locs(k-1):locs(k)); %subplot(2,1,2); plot(resp_clips);
        raster_clips = raster(i, locs(k-1):locs(k));
        [~,peak_ind] = max(stim_clips);
        if period > 0.2

            [r,lags] = xcorr((stim_clips-mean(stim_clips)), (resp_clips-mean(resp_clips)),'coeff');
            %         figure; stem(lags,r);
            [~,ind] = max(r);
            time_lag = lags(ind)/fs;
            phase(count) = time_lag*2*pi/period;
            
            gain(count) = (max(resp_clips)-mean(resp_clips))/(max(stim_clips)-mean(stim_clips));
            
            count = count + 1;
            
        else
            %             figure; plot(stim_clips);
            %             figure; plot(raster_clips);
            
            ind = find(raster_clips == 1);
            
            if length(ind)>=1
%                 phase(count) = get_spike_phase(ind(1), fs, period);
                phase(count) = (index/fs)*((2*pi)/period);
                
                gain(count) = sqrt(cos(((2*pi*(ind(1)-peak_ind)/fs)/period)^2)+sin(((2*pi*(ind(1)-peak_ind)/fs)/period)^2));
                count = count+1;
                
            end
        end
    end
end
figure;
polarscatter(phase, gain);
title("sin" + string(1/period));

end

function spike_phase_val = get_spike_phase(index, fs, period)

spike_phase_val = (index/fs)*((2*pi)/period);

end